#!./docviewer
# View this document with docviewer, see 'docviewer --format' for input syntax
#
.title
.content

. Basics: metric measures, ISO-Date-Time, Btrfs
===============================================

Centauri-Soho comes with some pre-configured defaults, like metric measures and
ISO date-time. But like most other things this can be changed somewhere. The following
topics offer some background information that might be helpful.

    Miscellaneous, Historic things
    ------------------------------

Most distros use exotic settings like 12h clock, weird date-time output or 'letter' paper
format. Most people on this planet don't use these and need to change it.

        paper size A4   see: /etc/papersize
        measures        see: /etc/bash.bashrc
        ISO-Date-TIME   a 'en_SE' dummy locale for QT, bash alias 'ls'

The things mentioned above are system settings. Modern GUI toolkits like Qt have their
own configurations that do not automatically reflect these settings.

The historic 'resolvconf' package is not at all compatible with Centauri-Soho and must
not be installed. Later versions of Centauri-Soho will use 'systemd resolved'.

    Systemd Boot and Grub
    ---------------------

On X86 pc platforms booting via 'systemd boot' is preferred, the implementation uses
an UKI and a MOK key. GRUB is only used as a fallback. The grub configuration is also
custom, the high-level Debian tools cannot be used - 'update-grub' is blocked by a
diversion. Centauri-Soho has its own tools to manage boot configurations and most
things happen automatically.

    Btrfs File-System and Partition-Labels
    --------------------------------------

Btrfs is the preferred file-system and the 'centaurisnapshot' tool is deeply integrated.
But it is still possible to use a different file-system. The 32-bit Raspberry version
uses Ext4 for example.

It should be noted that Centauri-Soho favors partition-labels over partition-uuids.
This might be hard to change, but is an essential part of the design. Many tool are
aware of partition-labels.

. Shell: BASH, custom '/etc/bash.bashrc' and '/etc/skel' files
==============================================================

The global '/etc/bash.bashrc' is modified to get more control over initialization at
login (bash compatible shells like 'dash' invoke this via '/etc/profile'). The
modified '/etc/bash.bashrc' calls '/etc/bash.centauri' to do the real work.

The files in '/etc/skel' are all modified to call '/etc/bash.bashrc' with a parameter
telling it who is calling. These files can be modified by the user. In their default
state they only serve as documentation and can be deleted.

The '/etc/bash.centauri' script defines some aliases and helpers to implement them.
See bash 'alias' command. Notable Centauri-Soho specific aliases are:

        ccd <name>          # location shortcut names, see 'centauripaths'
        cfi <expr>          # find files, see 'centauriinfo find'
        cid                 # show drive info, see 'centauriinfo disks'
        cim                 # show mount info, see 'centauriinfo mounts'
        cis <expr>          # show journal data, see 'centauriinfo syslog'
        clh <expr>          # centauri-bash-lib help, see 'centaurihelp -L'
        cth <expr>          # centauri-tools help, see 'centaurihelp -T'

. Console: Using 'systemd logind' but runs GUI on tty3 ... tty6
===============================================================

For console logins the standard logind is used (see '/etc/systemd/logind.conf').
Logins on tty1 and tty2 do nothing Centauri specific, but for tty3 ... tty a non-root
user will start a graphical session. This is independent on any display manager and
is implemented by calling 'centaurisession bashrc'.

. Display Manager: sddm for tty7 (other DM can be used, see 'centauristartx')
=============================================================================

The service units for 'sddm' and 'lightdm' are overridden to start the display managers
indirectly via 'centauristartx', see below. For VNC connections a 'lightdm-xdmcp.service'
is in charge, sddm does not support xdmcp.

It is also 'centauristartx' that launches a display manager for a console login from
tty3 ... tty6.

. DPI setting: via 'centauristartx' for X11 and consoles
========================================================

Based on some heuristics 'centauristartx' configures DPI settings and some X11 resources.
In general the defaults work very well, but '/etc/default/centauristartx' can be edited
for custom settings.

. GUI: Kde and LxQt pre-configured, other can be used
=====================================================

Wayland: currently not, might be KDE/KWin and LabWC in trixie

Audio: Pulse-Audio

VPN: OpenVPN (for android client support is mature)

File Sharing: Samba Basic, Samba AD/DC, NFSv4

. User Authentication at Login
==============================

On the low level the ugly PAM, reminescent from the former SUN company, handles things.
Fortunately, and with a little help, the 'pam-auth-update' tool handles configuration
correctly. At the top level 'sssd'  (system security services) is used and just works
fine. It integrates into PAM, works with AD/DC and caches domain credentials. Note: PAC
is disabled.

. Passwords and other Secrets
=============================

Password that must be managed by Centauri-Soho apply to: local users, basic samba, rsync,
repository access, ssh and e-mail.

System Users and Local Users
----------------------------

Linux keeps this stuff in '/etc/password' and '/etc/shadow' in an encrypted form. This
gets extended via '/usr/lib/extrausers/passwd' and '/usr/lib/extrausers/shadow'. The
first two are directly used by Debian systems tools and contain only system accounts.
The local user accounts are handled via extrausers. The same rules apply to group
files, but no group passwords are used so that 'gshadow' files are not managed. Together
this are 6 files that are synchronized in a domain using the Centauri repository.

Managing UIDs (User IDs)
------------------------

In a traditional installation some UIDs are pre-seeded by Debian and others get added in
a non-predictable way as more software gets installed. Today systemd helps seeding and
also reduces the number of system UIDs needed. Centauri-Soho alters the Debian config
slightly to allow more UIDs to be stored via 'extrausers'. As a result all machines
in a domain initially use the same UIDs, so the password files can be shared until more
software gets installed locally.

To manage UIDs on the local system the 'centauriowner save' command should be used before
making any changes. Then, after a reboot into maintenance mode, 'centauriowner restore'
will fix the UIDs of file-system objects.

The high-level tools for user identity management is 'centauriusers'. It uses a plugin
concept and can handle various types of credentials.

Basic Samba and Usershares
--------------------------

When connected to the home network, local Samba servers operate in 'member' mode, e.g.
the server handles authentication. In other network environments samba handles authentication
via '/etc/samba/smbpasswd' and PAM. No AD/DC server is involved. This we call 'basic samba'.

Traditionally Linux (and even Windows) could mount shares only once and for exactly one user.
Although modern Linux can do per-user mouning of shares, this is not well supported by any
tools. In Centauri-Soho the tool 'centaurimounter' which manages a kind of 'network neighborhood'
uses the special accounts 'smbworld' and 'smbtrust'. The first one grants read access only
and the second allows limited write permissions for members of group 'centauri'.

To get more control over a samba/windows network shares private 'usershares' can be used.
This is integrated into 'dolphin' for example. The permission for using this is provided
by group membership of 'sambashare'.

Rsync and Repository Access
---------------------------

The repository and the 'centauricopy' tool use 'rsync'. On servers the 'rsyncd' service is
active, on clients 'inetd' is used to launch the server side. While 'centauricopy' uses
rsync over ssh, other tools may use authorisation by user-name/password pairs. The main
configuration file is '/etc/rsynd.conf'. Clients have a static versions of this file, on
servers a dynamic versions is auto-generated by 'centaurimachines'.

The tool 'centaurimachines' creates per-client module entries in '/etc/rsyncd.conf' with
corresponding user-name/password entries (secrets file). Client usually have a limited view
of repository and operate only on a shadow copy. The client machines authorize themselves
by their machine-id, rsync passwords are random strings. When a client machine is registered
at the master server the file '/var/centauri/secrets/local/rsync_trusted' containing the
repository password is created.

For client side rsyncd instances the access permissions are kept in the auto-generated file
'/var/centauri/secrets/local/rsyncd_centauri.secret'. The 'centaurisecrets' to manages this
file based on configuration in '/etc/default/centaurisecrets'.

Ssh and Friends
---------------

For local use password are permitted, but ssh-key files are the preferred way. The key files
are managed on the server using 'centaurikeys' which maintains a key store. Keys are assinged
to 'classes' ...

TODO centaurikeys

E-Mail, Cyrus IMap, Mailboxes, Exim4, Fetchmail
-----------------------------------------------

The server side e-mail store is 'cyrus'. This Imap server has its own concept of accounts.
Usual configurations map cyrus accounts to Linus account one-to-one. Centauri-Soho does not
do so. Instead is uses 'sasldb' to manage account credentials for cyrus. So e-mail accounts
and Linux account are independent of each other.

The low-level tool to manage cyrus on a server is 'centaurimail' which can run the cyrus
admin console (a quite unfriendly perl script) and administer mail accounts (which cyrus
calls 'mailboxes').

Again the high level tool 'centauriusers' has a plugin to manage 'sasldb' entries and
passwords.

The transport agent used is 'exim4'. Debian has 'update-exim4.conf' to generate the real
exim configuration from '/etc/exim4/update-exim4.conf.conf'. The later is auto-generated
during Centauri-Soho setup. Also the exim templates contain a patch to make cyrus work.

To import mail from a provider 'fetchmail' is used. The tool is to be configured manually.

Security Concerns
-----------------

Centauri-Soho does not store unencrypted credentials on persistent storage. Instead this
stuff is downloaded to volatile storage from the master server when connecting to the home
network. At least this mitigates security problems when a computer is stolen.

On the other hand sssd (system security services) caches passwords and we don't know
what samba does. Open question: How are credentials obfuscated and how are they stored?

Currently Centauri-Soho does not explictly use TPM or kernel-keyrings.


. Certificates for SSL and OpenVPN, Certificate Authorities
===========================================================

SSL and OpenVPN use different Certificate Authorities (CAs).
When creating a server image centaurisoho creates both CertificateAuthorities.
Per default these CAs contain wildcard server and client certificates only.

The following site-specific SSL certificates are used by centaurisoho and are
contained in the repository:

        Name            shared  Description
        ───────────────────────────────────────────────────────────────
        snakeoil        no      dummy used by debian default configs
        clientcrt       yes     per-client, used to identify the client
        servercrt.pem   yes     servers, used to identify the servers
        servercrt.key   no      servers, used to identify the servers
        revoked.pem     yes     (pem only) list of revoked certificates
        ───────────────────────────────────────────────────────────────

The debian snakeoil certificate is generated by centaurisoho using a debian tool
once for each cloned system image. See:

    make-ssl-cert generate-default-snakeoil

Next centaurisoho checks the repository on a server for servercrt or for clientcrt
otherwise. If it finds a certificate it symlinks this as server or client. When no
certificate was found it symlinks to snakeoil.



sind centauricert certs wildcard?
wird snakeoil regeneriert (wenn nicht in repo)
default is symlink to snakeoil für client/server

server  -> servercrt, snakeoil
client  -> clientcrt, snakeoil



SAN:

    DNS:<prim>.<dom>
    DNS:<scnd>.<dom>

    DNS:raspi*.<dom>
    DNS:peter*.<dom>
    DNS:alpha3.<dom>,DNS:alpha4.<dom>
    DNS:alpha5.<dom> ... DNS:alpha9.<dom>
    DNS:<host>.<dom>

was sind die ssh klassen?
    server
    appliance
    computer
    mobile

    option mobile alpha[5-9]

4.6 More
--------


Group hierarchie and Site-Group
-------------------------------

    users
    <site-group>
    staff
    wheel
    root

The <site-group> would ideally be the 1st part of the domain name. Unfortunately
the could be an existing Linux group with special purpose. So we give group 1000
a special meaning as <site-group> gid. You can assign any name to this gid via
/etc/default/centauriusers. The default name is 'centauri'. The following checks
apply:
        1.  Group 'centauri' exists, done
        2.  GID 1000 exists, get group name
        3.  GID 1000 is a member group of user 'root'
        4.  Use group 'users' if check 2 or 3 failed


Passwords and other secrects
============================

Frequently Linux tools read files containing poorly obfuscated secrets.
In centauri we do not keep these on disk, we load them from the currently
active server to ram. If no server can be reached, dummy secrets data
is generated.

The related tools are:

    -   centaurisecrets     locate a server, load secrets
    -   centauriusers       user and password management
    -   centaurkerberos     domain relationship and AD


centaurkerberos     domain relationship and AD
==============================================

see:    /etc/krb5.conf
        /etc/ker5.keytab

### END

