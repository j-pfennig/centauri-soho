# Config for centaurinetcfg, jpf@centauri 2025-02-18

config %O%

# -----------------------------------------------------------------------------
# network (used to configure ethernet interfaces), dhcp, bad host
# -----------------------------------------------------------------------------
# As IPv6 addresses are derived from IPv4 (see below), the following is just
# IPv4 stuff. centaurisoho knows about the domain network zone that spans the
# locally accessible IPv4 range plus 7 sub-nets. These subnets must all be
# inside the domain net. Sub-net 1..6 are used by centaurisoho, sub-net 7 is
# free for any user-defined purpose. Mapping sub-net names to indexes is
# handled by library function 'netindex':  

network %D%  %B%    # <0> domain and base address

network iot           <domain>1.0/24    # <1> router, home-equipment
network trusted       <domain>2.0/24    # <2> trusted
network guest         <domain>3.0/24    # <3> guest static
network dynamic       <domain>4.0/24    # <4> guest dhcp
network repeater      <domain>5.0/24    # <5> repeater sub net
network vpn           <domain>6.0/24    # <6> openvpn

# The <other> subnet is optional and can be used to integerate another domain
# network. By default <other> is trusted, see 'filter trusted <other>' ...

network other         <domain>7.0/24    # <7> user defined (sub-)network

# The network name 'external' can be used to override <other> with a different
# value without error message. 'external' defaults to 'option other *' ...

network external      %E%     # optional external subnet override

# When <other> is not a sub-net of <domain> or if 'network external' is set,
# then 'option other *' if implied unless another 'option other ...' setting 
# is present ...

# option    other     *                 # usually set automatically

# centaurisoho fully supports IPv6 but builds on a non-routable local IPv4 net.
# So the local net always has to be behind a NAT router. It is out of question
# to expose the local network directly to the internet (the router should do
# firewalling and expose only specific local address/port destinations to the
# internet).

# -----------------------------------------------------------------------------
# IPv6 config
# -----------------------------------------------------------------------------
# For IPv6 support we must consider provider networks where the IPv6 router 
# prefix changes in regular intervals (like in germany). So our local IPv6
# support cannot depend on the public router prefix. Instead our server runs
# a router-advertisment-daemon that broadcasts an internal prefix (fc01::) and
# the local DNS server. Routers (like a Friz-Box) have their own radv that must
# be configured NOT TO BROADCAST DNS.
#
# These measures make Androids and other IOTs happily use IPv6 and/or IPv4. Of
# coarse we also run Avahi/zeroconf to help IPP printers and gadgets. Centauri
# linux computers do generate the local IPv6 addresses from IPv4, so we use DHCP
# only with IPv4 (Androids would not understand DHCPv6 anyhow).

# override the auto-generated ipv6 ULA prefix
# prefix fc01::/107

# -----------------------------------------------------------------------------
# WLAN, public DNS
# -----------------------------------------------------------------------------

# configure an unreachable network address used to avoid delays when not
# in home network (the servers get mapped to it):

reject  bad-host      10.255.255.1                  # invalid host, reject route

# Set client ssid and ap ssid: wireless <ssid>|- [<ssid-ap>|-]
wireless %W% %A%

# Out DNS name in the public internet
public  %I%

# -----------------------------------------------------------------------------
# Firewall configuration
# -----------------------------------------------------------------------------

# enable port 53 mapping with dnsmasq for samba4

option  addc        %P% %S%

# disable firewall or select connection-tracking/simple mode

    # option tracking <host>...     # set connection-tracking
    # option simple   <host>...     # set simple mode
    # option nofirewall <host>...   # turn firewall off

    # <host> can be * to select a default

option  tracking      *
option  simple        raspi[23] %G%[973]

    # disable mac checking (this configuration template cannot use max
    # addresses, so it's turned on). It is recommended to add mac addresses
    # to your custom network configuration and to turn this option off ... 

option  nomac         *

# trusted host (allowed to bypass the firewall)

option  trusted       %G%?

# hosts that can use smb and dlna

#option player         xxx

#option alien          xxx

#option mobile         %G%[5-9]
#option phone          phone?

# ------------------------------------------------------------------------------
# location awareness:
#
#   The firewall has two filter states (rule sets): 
#
#       wild                            # computer is in an unknown network zone
#       home                            # ... home network or a trusted network
#   
#       These filter states have corresponding rule sets.
#
#   Only when the filter state is 'home' two extra rule sets may apply:
#
#       players                         # give access for audio/video appliances
#       others                          # minimal access for guest/dhcp network    
#
# firewall processing order:
#
#   # early processing
#
#   <localhost> <hostname>              # loopback traffic is always accepted
#   filter deny   <dev>...              # deny access from interface
#   filter bypass <dev>...              # bypass firewall for an interface
#   <icmp>                              # internet control messages are OK
#   <connected state>                   # established connenction data
#   <ephemeral ports>                   # must bypass the firewall
#   <some udp ports>                    # for network management
#
#   # network/mac-address and option based processing
#
#   filter accept <net>                 # always accept an address range
#   <mac address trusted>               # allow trusted mac addresses (see host ...)
#   <mac address media players>         # ... with option player
#   <mac address router>                # ... routers
#   filter drop   <net>                 # deny further processing for address range
#
#   # specific rules
#
#   filter rules  <ip>...               # non-op, just for comments
# ------------------------------------------------------------------------------

# early processing by device

    # filter  deny   <dev>...           # deny access from interface
    # filter  bypass <dev>...           # bypass firewall for interface

filter  deny        eth[2-9] ppp+       # modems
filter  bypass      tun+                # VPN traffic
filter  accept      %G%[1-4]            # bypass firewall

# sub-network/host base permissions for 'home' location

    # filter drop   <ip>...             # drop before rule processing
    # filter rules  <ip>...             # non-op, just for comments
    # filter accept <ip>...             # accept without rule processing

    # <ip>  can be followed by a bit-count to specify a range

filter  trusted     <trusted>           # trusted address range
filter  trusted     <vpn>               # OpenVPN  traffic
filter  trusted     <other>             # trusted address range

filter  friend      <guest>             # untrusted address range (static)
filter  friend      <dynamic>           # untrusted address range (dhcp)
filter  friend      <repeater>          # Repeater traffic

filter  trash       <iot>               # untrusted home-equipment: log and drop

# firewall permissions for 'home' zone

    # <rule> := filter tcp|udp <chain> <what>...
    # <what> := [<dport>] ['|' <sport> ['|' <dest>]]

filter  tcp trusted 22 25 115 873       # ssh, smtp, rsync, sftp
filter  tcp trusted 53 5354             # dns, adns
filter  tcp trusted 80 443 8080         # http(s)
filter  tcp trusted 3127:3128           # proxy
filter  tcp trusted |3127:3128          # proxy (also source)
filter  tcp trusted 135 139 445 |445    # samba
filter  tcp trusted 143 993             # imap(s)
filter  tcp trusted 88 389              # kerberos, LDAP
filter  tcp trusted 631 |631            # CUPS
filter  tcp trusted 853                 # DNS over TLS
filter  tcp trusted 1883                # MQTT
filter  tcp trusted 111 |111 2049       # NFS (111 source also)
filter  tcp trusted 32767               # NFS mountd fixed port
filter  tcp trusted |32767              # NFS ... (source)
filter  tcp trusted 5060                # SIP
filter  tcp trusted 8200                # TRIVNET (used by TV)
filter  tcp trusted 8123                # Home Assistant
filter  tcp trusted ||169.254.0.0/16    # APIPA

filter  udp trusted 137:138 |137:138    # samba netbios
filter  udp trusted 88 389              # kerberos, LDAP
filter  udp trusted 546                 # dhcpv6   SPT=547
filter  udp trusted 631                 # CUPS browsing
filter  udp trusted 1900 |1900          # UPNP (also source)
filter  udp trusted 111 |111 |2049      # NFS (111, 2049 source also)
filter  udp trusted 32767               # NFS mountd fixed port
filter  udp trusted |32767              # NFS ... (source)
filter  udp trusted 5060                # SIP
filter  udp trusted 5353                # AVAHI

filter  tcp trusted 1194                # openvpn
filter  udp trusted 1194                # openvpn

# === router chain ===

filter  tcp router  8200

filter  udp router  137:138 |137:138    # samba netbios
filter  udp router  1900 |1900          # UPNP (also source)
filter  udp router  5353                # AVAHI
filter  udp router  8200

filter  tcp router  1194                # openvpn
filter  udp router  1194                # openvpn

# should be router
filter  tcp friend  509
filter  udp friend  509
filter  tcp router  509
filter  udp router  509

# remotessh, remoteimap and remotesmtp are added automatically

# === player chain ===

filter  tcp player  138 445             # samba
filter  tcp player  8081                # weewx interceptor
filter  tcp player  8200                # TRIVNET (used by TV)

filter  udp player  137:138 |137:138    # samba netbios
filter  udp player  1900 |1900          # UPNP (also source)
filter  udp player  5353                # AVAHI

filter  tcp player  1883                # MQTT

# examples ...
#filter lit alien    -p udp --dport 3333 -j ACCEPT
#filter lit alien    -p tcp --dport 3333 -j ACCEPT

# firewall permissions for 'wild' zone

filter  tcp friend  22 115              # ssh, sftp
filter  tcp friend  80 8080             # http
filter  tcp friend  138 445             # samba

filter  udp friend  137:138 |137:138    # samba netbios
filter  udp friend  1900 |1900          # UPNP (also source)
filter  udp friend  5353                # AVAHI

filter  tcp friend  3127:3128           # proxy
filter  tcp friend  |3127:3128          # proxy (also source)

# silently drop unassigned ports (1900 and 5353 are implicitly added) ...

filter  tcp trash   853
filter  tcp trash   +:++ |+:++          # ephemeral ports

filter  udp trash   853                 # DNS over TLS
filter  udp trash   +:++ |+:++          # ephemeral ports

# ------------------------------------------------------------------------------
# generate /etc/hosts.allow
# ------------------------------------------------------------------------------

allow   *             *                             # everything for local
                                                    #    and "filter rules/accept"
allow   *             192.168.0.0/16                # everything for private net
allow   *             172.16.0.0/20                 # ...
allow   *             [fc00::]/15                   # ip6v ULA
allow   openvpn       ALL                           # remotssh for everyone
allow   remotessh     ALL                           # remotssh for everyone
allow   remoteimap    ALL                           # remotimap for everyone
allow   remotesmtp    ALL                           # remotsmtp for everyone

# ------------------------------------------------------------------------------
# Per-host options - See 'host naming rules' below 
# ------------------------------------------------------------------------------

# options (1) hosts that support ipv6

        # used by centaurinetcfg to enable or disable ipv6. Support for ipv6 
        # is uses embedded ipv4 addresses (UlA) with prefix 'fc01::'. External
        # ipv6 addressing comes via router advertisments. To support hosts like
        # mobile devices, windows etc. the 'radv' service must be enabled, to
        # send 'fc01::' as prefix and to advertise dns. See 'option radv' below.
        # The 'fc01::' prefix can be changed with a 'prefix' configuration line.

# example (1) enable ipv6 for all hosts
option ipv6          *
# example (2) enable for all but %G%2 and %G%3
#option ipv6          %G%[!23]

# options (2) services:

        # hosts that provide dhcp
option  dhcp          %P% %S% %G%[56]
        # hosts that provide dns
option  dns           %P% %S% %G%[56]
        # hosts that provide ntp
option  ntp           %P% %S%
        # hosts that provide ldap
option  ldap          %P% %S%
        # hosts that can be used as WEB proxy server
option  proxy         %P% %S% %G%[56]
        # hosts that can be used as mail server
option  smtp          %P%
option  pop3          %P%
        # hosts that register via mdns/netbios
option  mdns          windows* 

# options (3) create /etc/network/interfaces

#       [default]   - dhcp bevorzugen
#       auto        - dhcp bevorzugen bei 1 addresse sonst nm
#       manual      - finger weglassen
#       static      - kein dhcp, kein nm
#       nm          - nm bevorzugen

        # bring interface up using dhcp, no NetworkManager
option  auto          *
        # do not generate an interface file at all
#option  manual        raspi3
        # hosts that use NetworkManager (fallback to auto)
option  nm            %G%[2-3]
        # hosts with static IP address, not using NetworkManager/DHCP
option  static        %G%[01]

# options (4) extra network modes

option  apoint        dummy1                    # static:server  -> static:apoint
option  switch        dummy[3-9]
option  router        dummy[3-9] raspi* %G%[2-5]
option  extender      dummy[3-9] raspi* %G%[23]
option  repeater      dummy[3-9] raspi* %G%[23]

# options (5) interface flags

        # Hosts with mulitiple ethernet interfaces (like servers) go here ...

option  ether       %P%-1 %S%-1
option  wlan        %P%-2 %S%-2
        
        # The 'other' option is used to make the <other> sub-net an external
        # network. This prevents the firewall from implicitly allowing dhcp
        # and mdns traffic to enter from <other>. Note: the firewall does not
        # check host names, any name will do.

        # Use 3rd ip as a second addr addr to 1st ip, or add 4th to 2nd. This
        # gets overridden by 'option ether' or 'option wlan' ...

#option  other      *-2 *-3

        # By default the 1st interface of a host is ether and the 2nd is wlan.
        # Only if ether/wlan kind is known configuration entries are generated.

        # Interfaces without mac are considered as hotplug

        # override ethernet/wlan default
option  ether         ether-* 
option  wlan          wlan-* 

        # override hotplug feature
option  hotplug       ether-* wlan-*

        # enbable wol on eth0 (ethertools required)
option  wol           dummy[23]

        # override metric (default priority: eth0 eth1 wlan0 wlan1)
        #          <host>-0     eth0     metric0
        #          <host>-1     wlan0    metric2
        #          <host>-2     eth1     metric1
        #          <host>-3     wlan1    metric3

        # ethernet interfaces
option  metric0     dummy2-1
option  metric1     *

        # wlan interfaces
option  metric2     dummy2-0
option  metric3     *

        # enable systemd interface naming
option  sysdnames   *

        # set the wlan regulatory domain from timezone country table (this is
        # implemented via ifup callback to 'centauriswitch up wl* ...')
option country raspi* %G%[13579]

# ------------------------------------------------------------------------------
# systemd interface name mapping (see option 'sysdnames')
# ------------------------------------------------------------------------------

iface   eth1    alpha8  11:11:11:11:11:11
iface   eth1    alpha9  enxxx
iface   eth0    alpha8  enp4s0
iface   wlan0   alpha8  wlp5s0

# ------------------------------------------------------------------------------
# Routers, servers and homedns
# ------------------------------------------------------------------------------

# default router and hosts that are routers (1st is default)

router  %R%        %R%0 %R%1 %R%2

# server nick name and hosts that are servers (1st is default).

server  %G%        %P% %S% 

# For network location awareness we need a trust relation. This is called the
# homedns because it depends on the DNS server and uses /etc/resolv.conf data.
# If we get no known DNS server the centaurifilter firewall will enter 'wild'
# mode. Any homedns will cause centaurisecrets to check (a) the configured server
# (when homedns = server nick name) or (b) the host providing the DNS (otherwise).
# Case (a) results in 'client' state and (b) in 'guest' state on success. For both
# the centaurifilter firewall enters 'home' mode.

# Due to is dhcp relation, homedns is based on IPv4 addresses only.

# Homedns trusts in evaluation order (1st match stops evaluation). The arguments
# are: <domain> <host> <homedns>. If <domain> and <host> match an entry from
# /etc/resolv.conf the <homedns> key is used as trust. A minus sign for <domain>
# or <host> disabled this check (be carefull). The configured servers are added
# automatically at the top of the list:
   
    # names should not be qualified here (duplicated host names are not
    # allowed anyhow). Qualifiers are added automatically as needed.
homedns centauri.home raspi4         raspi4

    # We are at home if we found our router (without domain). This should happen
    # only if the servers cannot be reached.
homedns -             router0        %G%

    # If we want to trust a server in a different domain we can disable checking
    # the domain and add the servers explicitly. The 'host' entries must use the
    # Ipv4:
homedns -             alpha1         %G%
homedns -             dummy2         %G%

# ------------------------------------------------------------------------------
# Host naming rules
# ------------------------------------------------------------------------------
# Classic:      name        # one defined interface only
#
# Explicit:     [name-0]    # ethernet by default (even index)
#               [name-1]    # wlan     by default (odd  index)
#               [name-N]    # more, see option ether/wlan
#                           # at least 1 interface required
#
# Smart mode:   name        # logical address, no mac
#               [name-0]    # ethernet by default (even index)
#               [name-1]    # wlan     by default (odd  index)
#               [name-N]    # more, see option ether/wlan
#
# Metric:       eth0    400 ;   eth1    500
#               wlan0   600 ;   wlan1   700
#               br0     200

# ------------------------------------------------------------------------------
# Private MAC address usage (can be used for bridges and firewall permissions)
# ------------------------------------------------------------------------------
# The IEEE802 standard define private macs as:
#   x2:xx:xx:xx:xx:xx x6:xx:xx:xx:xx:xx xA:xx:xx:xx:xx:xx xE:xx:xx:xx:xx:xx
#
# Centaurisoho suggestion is to use:
#   ee:<index>:<ipv4>       # in hex and with dots replaced by colons 
#   ee:00:0a:10:02.0a       # Example for IPv4 10.16.2.10 <host> 
#   ee:00:0a:10:02.0b       #                  10.16.2.11 <host>-1

# ------------------------------------------------------------------------------
# Subnet <other> - auxiliary network for testing
# ------------------------------------------------------------------------------

host    -                   <other>30     test0
host    -                   +             test1
host    -                   +             test2
host    -                   +             test3
host    -                   +             test4
 
# ------------------------------------------------------------------------------
# Subnet <domain>1.xxx - Routers and Home Equipment
# ------------------------------------------------------------------------------

# Routers are defined via 'router <host>...' and must have 'host' statements.
# They should have known mac addresses or the firewall configuration must use:
# 'option nomac'. Don't forget to disable router DNS if using a centauri-soho
# server. To make IPv6 work the router muse advertise the router prefix but
# MUST NOT advertise a DNS server. The centauri-soho server runs its own radv
# daemon the advertise DNS and a local router prefix ...

host    -                   %R4%       %R%0
host    -                   +          %R%1
host    -                   +          %R%2

# ------------------------------------------------------------------------------
# alpha hosts 0 ... 99 (Oberrod)
# ------------------------------------------------------------------------------

host    -                   10.21.2.11    alpha1    # primary server     # NUC 2020
host    1c:69:7a:64:0b:21   10.21.2.13    alpha1-0  # ... LAN   #1
host    0c:7a:15:6d:2d:5b   10.21.2.17    alpha1-1  # ... WLAN

host    -                   10.21.2.80    alpha8    # Notebook generic
host    98:fa:9b:aa:28:0b   +             alpha8-0  # ..       LAN-0
host    40:74:e0:b2:44:5e   +             alpha8-1  # ....     WLAN-0
host    -                   +             alpha8-2  # ..       LAN-1
host    -                   +             alpha8-3  # ....     WLAN-1

# ------------------------------------------------------------------------------
# Subnet <trusted>xxx - Trusted computers 
# ------------------------------------------------------------------------------

# servers (configured with 2 ethernet interfaces)

host    -                   <trusted>10   %G%        # generic, no hosts entry

host    +                   <trusted>11   %P%       # primary server
host    +                   <trusted>13   %P%-0     # ... LAN   #1
host    +                   <trusted>15   %P%-1     # ... LAN   #2 see 'option ether'
host    +                   <trusted>17   %P%-2     # ... WLAN     see 'option wlan'

host    +                   <trusted>12   %S%       # secondary server
host    +                   <trusted>14   %S%-0     # ... LAN   #1
host    +                   <trusted>16   %S%-1     # ... LAN   #2 see 'option ether'
host    +                   <trusted>18   %S%-2     # ... WLAN     see 'option wlan'

# some well known hosts

host    +                   <trusted>195  dummy1
host    +                   +             dummy2
host    +                   +             dummy3
host    +                   +             dummy4

# ------------------------------------------------------------------------------
# generic hosts 2 ... 9 (0 and 1 should be servers)
# ------------------------------------------------------------------------------

host    +                   <trusted>25   %M%2     #           generic
host    +                   +             %M%2-0   # ..        LAN
host    +                   +             %M%2-1   # ....      WLAN

host    +                   <trusted>35   %M%3     #           generic
host    +                   +             %M%3-0   # ..        LAN
host    +                   +             %M%3-1   # ....      WLAN

host    +                   <trusted>45   %M%4     #           generic
host    +                   +             %M%4-0   # ..        LAN
host    +                   +             %M%4-1   # ....      WLAN

host    +                   <trusted>55   %M%5     #           generic
host    +                   +             %M%5-0   # ..        LAN
host    +                   +             %M%5-1   # ....      WLAN

host    +                   <trusted>65   %M%6     #           generic
host    +                   +             %M%6-0   # ..        LAN
host    +                   +             %M%6-1   # ....      WLAN

host    +                   <trusted>75   %M%7     #           generic
host    +                   +             %M%7-0   # ..        LAN
host    +                   +             %M%7-1   # ....      WLAN

host    +                   <trusted>85   %M%8     #           generic
host    +                   +             %M%8-0   # ..        LAN
host    +                   +             %M%8-1   # ....      WLAN

host    +                   <trusted>95   %M%9     #           generic
host    +                   +             %M%9-0   # ..        LAN
host    +                   +             %M%9-1   # ....      WLAN

# ------------------------------------------------------------------------------
# Raspberry
# ------------------------------------------------------------------------------

host    -                   <trusted>130  raspi1            # Raspi    generic
host    -                   +             raspi1-0          # ..       LAN
host    -                   +             raspi1-1          # ..       WLAN

host    -                   <trusted>135  raspi2            # Raspi    generic
host    -                   +             raspi2-0          # ...      WLAN
host    -                   +             raspi2-1          # ...      alu case

host    -                   <trusted>140  raspi3            # Raspi    generic
host    -                   +             raspi3-0          # ...      WLAN
host    -                   +             raspi3-1          # ...      alu case

host    -                   <trusted>145  raspi4            # Raspi   generic
host    -                   +             raspi4-0          # ..      LAN
host    -                   +             raspi4-1          # ..      WLAN

host    -                   <trusted>150  raspi5            # Raspi   generic
host    -                   +             raspi5-0          # ..      LAN
host    -                   +             raspi5-1          # ..      WLAN

host    -                   <trusted>155  raspi6            #
host    -                   +             raspi6-0          # ..      LAN
host    -                   +             raspi6-1          # ..      WLAN

host    -                   <trusted>160  raspi7            # 
host    -                   +             raspi7-0          # ..      LAN
host    -                   +             raspi7-1          # ..      WLAN

host    -                   <trusted>165  raspi8            #
host    -                   +             raspi8-0          # ..      LAN
host    -                   +             raspi8-1          # ..      WLAN

host    -                   <trusted>170  raspi9            # 
host    -                   +             raspi9-0          # ..      LAN
host    -                   +             raspi9-1          # ..      WLAN

# ------------------------------------------------------------------------------
# attachable interfaces
# ------------------------------------------------------------------------------

# See 'option ether' and 'option wlan' settings
 
host    00:e0:4c:36:3c:a2   <domain>1.80    ether-0   # hopjuery 100 MBit/s
host    5c:85:7e:3e:c7:8b   <domain>1.81    ether-1   # cable matters 1GBit/s
host    11:11:11:11:11:13   <domain>1.82    ether-2
host    11:11:11:11:11:14   <domain>1.83    ether-3

host    11:11:11:11:11:15   <domain>1.85    wlan-0
host    11:11:11:11:11:16   <domain>1.86    wlan-1

# ------------------------------------------------------------------------------
# fakes - create /etc/hosts entries refering to 'bad-host' reject route
# ------------------------------------------------------------------------------

fake doubleclick.com
fake doubleclick.net
fake googleadservices.com
fake google-analytics.com
fake googlesyndication.com
fake googletagmanager.com
fake googletagservices.com

# end
