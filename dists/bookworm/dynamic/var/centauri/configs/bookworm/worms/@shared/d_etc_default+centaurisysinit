# -----------------------------------------------------------------------------
# Appliances are special boot options for computers that have no default linux
# network and service configuration.
#
#   <runlevel>  2       # minimal networking and centauriswitch services started
#               3       # all linux networking services get started
#   <mode>      ...     # any network mode, auto selected if empty
#   <conf>      ...     # optional network configuration
#   <arg>       ...     # any kernel boot parameters
#
# centaurisysinit starts in appliance mode if runlevel is 2 or 3 and if either
# the network mode is "(switch|router):.*" or 'centauriautlogin' is defined.
#
# For runlevel 2 centaurisysinit handles starting networking and centauriswitch
# if kernel boot parameters match the definition of an appliance. All further
# steps are handled by centauriswitch. See /etc/default/centauriswitch
# -----------------------------------------------------------------------------

# List of appliances:
#         Label                  runlevel   mode     conf       kernel boot params
appliance "Network: Menu Mode"          2   disabled -          'centaurilogin=local'
appliance "Network: Switch Mode"        2   switch          

appliance "Network: Router Mode"        3   router          
appliance "Network: Extender Mode"      3   switch   extender          
appliance "Network: Repeater Mode"      3   router   repeater

appliance "Display: Digital Clock"      2   simple   -         'centaurilogin=clock'
appliance "Display: Homeassistant GUI"  2   smart    -         'centaurilogin=homeassistant' 
appliance "Display: Kiosk Mode"         2   simple   -         'centaurilogin=kiosk'

# timers to be started in appliance modes 
apptimers   anacron apt-daily apt-daily-upgrade  exin4-base logrotate systemd-tmpfile-clean

# -----------------------------------------------------------------------------
# This is a bash script that is sourced by service 'centaurisysinit' at early
# boot. It can be used for things that could have been placed in 'rc.local'.
# It also handles starting of appliances. The 'centauri-bash-lib' is initialized 
# prior to running this script.
# -----------------------------------------------------------------------------

remove -d -- /var/tmp/centauribashlib-*/*
folder -m -- /run/sshd
 
# disable ipv6 for virtual box guests
if [ -c /dev/vboxguest ] ; then
    message "Disabled ipv6 (running as virtual box guest)"
    embed centauriroute ipv6 off
fi

# run 1st boot script
if [ -e "$CEN_ROOT/persistent/centaurisysinit-1st-boot" ] ; then
    message "Run 1st-boot script"
    source "$CEN_ROOT/persistent/centaurisysinit-1st-boot" 
    remove "$CEN_ROOT/persistent/centaurisysinit-1st-boot" 
fi

# install/update diversions

if [ ! -e "$CEN_ROOT/persistent/centaurisysinit-diversions" ] ; then
    message "Updating diversions"
    create -- "$CEN_ROOT/persistent/centaurisysinit-diversions"
    embed centauridivert update
fi

# low profile system tweaks

if [ -b "/dev/disk-by-label/${HOSTNAME}_swap" ] ; then
    local ndev
    resolve -c -q -s ndev "/dev/disk-by-label/${HOSTNAME}_swap" 
    ndev="${ndev##*/}"
    if [ "${ndev::3}" = 'mmc' ] ; then
        echo 1 > '/sys/module/zswap/parameters/enabled'
        message "Enabled zwap (swap to SD-Card)"
    fi
fi

# /tmp tweaks

[ -e /run/user -a ! -e /tmp/user ] && symlink -q -- /run/user /tmp/user

# generate locales

___locale_check() {
    local aloc
    sysrun -a aloc -q -- locale -a || return
    listsearch -i aloc -- 'en_SE.utf8' && return
    message "Generating locales"
    sysrun -q -- localedef -f UTF-8 -i en_US en_SE.UTF-8
}
system -c locale localedef && ___locale_check

# make links in /mnt

if [ "/etc/fstab" -nt "$CEN_ROOT/persistent/centaurisysinit-links" ] ; then
    message "Updating mount links"
    create -- "$CEN_ROOT/persistent/centaurisysinit-links"
    embed centauridata -q -n links -- init
fi

# disable nfs-server-generator

if [ ! -e /etc/systemd/system-generators/nfs-server-generator ] ; then
    warning "Bad: 'nfs-server-generator' is active, disabling now"
    folder -m /etc/systemd/system-generators
    symlink /usr/bin/true /etc/systemd/system-generators/nfs-server-generator
    system systemctl daemon-reload 
else
    message "Good: 'nfs-server-generator' is disabled"
fi

# tinyproxy folder
folder -m /var/log/tinyproxy 770 tinyproxy:staff

