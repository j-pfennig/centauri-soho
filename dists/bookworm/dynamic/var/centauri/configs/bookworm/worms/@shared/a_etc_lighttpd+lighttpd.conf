server.modules = (
	"mod_indexfile",
	"mod_access",
	"mod_alias",
 	"mod_redirect",
)

server.document-root        = "/var/www/html"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 80

# features
#https://redmine.lighttpd.net/projects/lighttpd/wiki/Server_feature-flagsDetails
server.feature-flags       += ("server.h2proto" => "enable")
server.feature-flags       += ("server.h2c"     => "enable")
server.feature-flags       += ("server.graceful-shutdown-timeout" => 5)
#server.feature-flags       += ("server.graceful-restart-bg" => "enable")

# strict parsing and normalization of URL for consistency and security
# https://redmine.lighttpd.net/projects/lighttpd/wiki/Server_http-parseoptsDetails
# (might need to explicitly set "url-path-2f-decode" = "disable"
#  if a specific application is encoding URLs inside url-path)
server.http-parseopts = (
  "header-strict"           => "enable",# default
  "host-strict"             => "enable",# default
  "host-normalize"          => "enable",# default
  "url-normalize-unreserved"=> "enable",# recommended highly
  "url-normalize-required"  => "enable",# recommended
  "url-ctrls-reject"        => "enable",# recommended
  "url-path-2f-decode"      => "enable",# recommended highly (unless breaks app)
 #"url-path-2f-reject"      => "enable",
  "url-path-dotseg-remove"  => "enable",# recommended highly (unless breaks app)
 #"url-path-dotseg-reject"  => "enable",
 #"url-query-20-plus"       => "enable",# consistency in query string
)

index-file.names            = ( "index.php", "index.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

deflate.cache-dir          = "/var/cache/lighttpd/compress/"
deflate.mimetypes          = ( "application/javascript", "text/css", "text/html", "text/plain" )

# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
include_shell "/usr/share/lighttpd/create-mime.conf.pl"

# authorization for webdav

server.modules += ( "mod_auth", "mod_authn_pam")
auth.backend = "pam" 
#auth.backend.pam.opts = ( "service" => "http" )  # default "http"
auth.require = ( "/webdav/Users" => ("method" => "basic", "realm" => "example", "require" => "valid-user") )


include "/etc/lighttpd/conf-enabled/*.conf"

#server.compat-module-load   = "disable"
server.modules += (
	"mod_access",
	"mod_deflate",
	"mod_dirlisting",
	"mod_staticfile",
)

alias.url              += ( "/dwww" => "/var/www/dwww", "/webdav" => "/var/www/wdav" )
alias.url              += ( "/rainloop" => "/usr/share/rainloop" )
dir-listing.activate    = "enable"

# deny access to rainloop data
$HTTP["url"] =~ "^/rainloop/data/" {
     url.access-deny = ("")
}

# make ssl work -- don't use conf-enbabled/...ssl...

server.modules += ( "mod_openssl" )
ssl.privkey = "/etc/lighttpd/server.key"
ssl.pemfile = "/etc/lighttpd/server.pem"
$SERVER["socket"] == ":443" {
  ssl.engine = "enable" 
}
include_shell "/usr/share/lighttpd/use-ipv6.pl 443"

# make webdav work -- don't use conf-enabled/...webdav...

server.modules += ( "mod_webdav" )
$HTTP["url"] =~ "^/webdav($|/)" {
    webdav.activate         = "enable"
    webdav.is-readonly      = "disable"
    webdav.opts = ("unsafe-propfind-follow-symlink" => "enable")
}
webdav.sqlite-db-name = "/var/cache/lighttpd/lighttpd.webdav.db"

# end
